#!/usr/bin/env bash

# recurse through parents and load environment variables from .env, then run the given command 
# example usage:
# with-dotenv /projects/my-project/scripts/main.sh --verify
# ^ this will run main.sh --verify with any .env-files existing in the directory hierarchy

initial_dir="$PWD"

# parse -f argument which bypasses the loop and just takes the given file directly

env_file=""

while getopts ":f:" opt; do
  case $opt in
    f)
      if [ -f "$OPTARG" ]; then
        env_file="$OPTARG"
      else
        echo "File not found: $OPTARG"
        exit 1
      fi
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND -1))


if [ -f "$env_file" ]; then
  set -o allexport
  . "$env_file"
  set +o allexport
fi

while
    [[ "$PWD" != / && ! -f "$env_file" ]]
  do
    if [ -f .env ]; then
        echo "Loading .env from $PWD"
        env_file="$PWD/.env"
        break
    fi
    cd -P ..
done

#  # https://stackoverflow.com/a/44364170
#  # export all variables in .env
  set -o allexport
  . "$env_file"
  set +o allexport
#
#cd "$initial_dir"

"$@"

